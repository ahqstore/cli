name: Publish Rust Binary + CLI

on:
  push:
    paths:
      - "cli-rs/**"
    branches:
      - main

  workflow_dispatch:

jobs:
  publish-npm:
    name: Build & Publish raw cli to npm

    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - target: aarch64-pc-windows-msvc
            platform: windows-latest

          - target: i686-pc-windows-msvc
            platform: windows-latest

          - target: aarch64-apple-darwin
            platform: macos-latest

          - target: i686-unknown-linux-gnu
            platform: ubuntu-latest

          - target: aarch64-unknown-linux-gnu
            platform: ubuntu-latest

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: https://registry.npmjs.com

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install nj cli
        run: cargo install nj-cli
        working-directory: cli-rs

      - name: Build Node
        run: nj-cli build --release
        env:
          TSLINK_BUILD: "true"
        working-directory: cli-rs

      - name: Finalize
        run: node finalize.js
        working-directory: cli-rs

      - name: Build Node (2nd Target)
        run: nj-cli build --target ${{ matrix.target }} --release
        env:
          TSLINK_BUILD: "true"
        working-directory: cli-rs

      - name: Finalize
        run: node finalize.js
        working-directory: cli-rs

      - name: Publish
        run: npm publish --scope ahqstore --access public --verbose
        working-directory: cli-rs/dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          token: ${{ secrets.NPM_TOKEN }}

  publish-cargo:
    name: Build & Publish cli to cargo

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Test Rust Binary
        run: cargo build
        working-directory: cli-rs
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
