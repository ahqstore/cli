name: Publish Rust Binary + CLI

on:
  push:
    paths:
      - "cli-rs/**"
    branches:
      - main

  workflow_dispatch:

jobs:
  publish-npm:
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.platform }}

    name: Build & Publish raw cli

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: latest
          registry-url: https://registry.npmjs.com

      - name: Fetch ARM target
        uses: actions/github-script@v3
        id: arm
        with:
          result-encoding: string
          script: |
            const { platform } = require("process");
            if (platform == "win32") {
              return "aarch64-pc-windows-msvc"
            } else if (platform == "darwin") {
              return "aarch64-apple-darwin"
            } else {
              return "aarch64-unknown-linux-gnu"
            }

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ steps.arm.outputs.result }}

      - name: Install nj cli
        run: cargo install nj-cli
        working-directory: cli-rs

      - name: Build Node
        run: nj-cli build --release
        env:
          TSLINK_BUILD: "true"
        working-directory: cli-rs

      - name: Finalize
        run: node finalize.js
        working-directory: cli-rs

      - name: Publish
        run: npm publish --scope ahqstore --access public --verbose
        working-directory: cli-rs/dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          token: ${{ secrets.NPM_TOKEN }}

      - name: Linux Setup Arm
        run: sudo apt install gcc-aarch64-linux-gnu

      - name: Build Node (ARM)
        run: nj-cli build --target ${{ steps.arm.outputs.result }} --release
        env:
          TSLINK_BUILD: "true"
        working-directory: cli-rs

      - name: Finalize ARM
        run: node finalize.js
        working-directory: cli-rs
        env:
          arch: arm64

      - name: Publish ARM
        run: npm publish --scope ahqstore --access public --verbose
        working-directory: cli-rs/dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          token: ${{ secrets.NPM_TOKEN }}

  publish-cargo:
    name: Build & Publish cli to cargo

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Test Rust Binary
        run: cargo build
        working-directory: cli-rs
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
